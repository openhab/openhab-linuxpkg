#!/bin/sh
#
# Executed before the installation of the new package
#
# On .deb based systems:
#   $1=install              : On installation
#   $1=upgrade              : On upgrade
#
# On .rpm based systems:
#   $1=1                    : On installation
#   $1=2                    : On upgrade

set -e

UD_CACHE=/var/lib/openhab/cache
UD_TMP=/var/lib/openhab/tmp
UD_KAR=/var/lib/openhab/kar
RESTART_FLAG_FILE=/var/lib/openhab/.restartOnUpgrade
OLD_VERSION_FILE=/var/lib/openhab/.previousVersion

removeCache(){
  [ -d ${UD_CACHE} ] && rm -rf ${UD_CACHE}
  [ -d ${UD_TMP} ] && rm -rf ${UD_TMP}
  [ -d ${UD_KAR} ] && rm -rf ${UD_KAR}
  true
}

flagRestart() {
  if [ -x /bin/systemctl ] ; then
    if /bin/systemctl status openhab.service > /dev/null 2>&1; then
      touch ${RESTART_FLAG_FILE}
    fi
  elif [ -x "/etc/init.d/openhab" ]; then
    if [ -x "$(which invoke-rc.d 2>/dev/null)" ]; then
      if invoke-rc.d openhab status > /dev/null 2>&1; then
        touch ${RESTART_FLAG_FILE}
      fi
    else
      if /etc/init.d/openhab status > /dev/null 2>&1; then
        touch ${RESTART_FLAG_FILE}
      fi
    fi
  fi
  return 0
}

flagVersion() {
  versionFile="/var/lib/openhab/etc/version.properties"
  if [ -f "${versionFile}" ]; then
    awk '/openhab-distro/{print $3}' "${versionFile}" > "${OLD_VERSION_FILE}"
  fi
}

case "$1" in
  install|upgrade)
    # APT Install or Upgrade
    removeCache
    flagVersion
    OH_USER=openhab
    OH_GROUP=openhab
    if [ x"${USER_AND_GROUP}" != x ]; then
      OH_USER=$(echo "${USER_AND_GROUP}" | cut -d ":" -f 1)
      OH_GROUP=$(echo "${USER_AND_GROUP}" | cut -d ":" -f 2)
    fi
    if ! getent group "$OH_GROUP" > /dev/null 2>&1 ; then
      addgroup --system "$OH_GROUP" --quiet
    fi
    if ! getent passwd "$OH_USER" > /dev/null 2>&1 ; then
      adduser --quiet --system --ingroup "$OH_GROUP" --no-create-home \
      --disabled-password --shell /bin/false \
      --gecos "openhab runtime user" --home /var/lib/openhab "$OH_USER"
    fi
    ;;
  1|2)
    # RPM Install (1) or Upgrade (2)
    flagRestart
    flagVersion
    if [ -x /bin/systemctl ] ; then
      /bin/systemctl --no-reload stop openhab.service > /dev/null 2>&1 || true
    elif [ -x "/etc/init.d/openhab" ]; then
      if [ -x "$(which invoke-rc.d 2>/dev/null)" ]; then
        invoke-rc.d openhab stop > /dev/null 2>&1 || true
      else
        /etc/init.d/openhab stop > /dev/null 2>&1 || true
      fi
      sleep 5
    fi
    removeCache
    OH_USER=openhab
    OH_GROUP=openhab
    if [ x"${USER_AND_GROUP}" != x ]; then
      OH_USER=$(echo "${USER_AND_GROUP}" | cut -d ":" -f 1)
      OH_GROUP=$(echo "${USER_AND_GROUP}" | cut -d ":" -f 2)
    fi
    if ! getent group "$OH_GROUP" > /dev/null 2>&1 ; then
      groupadd --system "$OH_GROUP"
    fi
    if ! getent passwd "$OH_USER" > /dev/null 2>&1 ; then
      useradd --system -g "$OH_GROUP"  \
      --shell /bin/false \
      --home /var/lib/openhab "$OH_USER"
    fi
    ;;
esac
exit 0
